@inproceedings{paulovsky2017high,
	title={High-coverage testing of navigation models in Android applications},
	author={Paulovsky, Fernando and Pavese, Esteban and Garbervetsky, Diego},
	booktitle={Proceedings of the 12th International Workshop on Automation of Software Testing},
	pages={52--58},
	year={2017},
	organization={IEEE Press}
}

@INPROCEEDINGS{524785, 
	author={J. Z. Gao and D. Kung and P. Hsia and Y. Toyoshima and C. Chen}, 
	booktitle={Computer Software and Applications Conference, 1995. COMPSAC 95. Proceedings., Nineteenth Annual International}, 
	title={Object state testing for object-oriented programs}, 
	year={1995}, 
	pages={232-238}, 
	keywords={abstract data types;object-oriented programming;program testing;OO features;OO programs;aggregation;behavior testing;class objects;communicating state machine;complex class object;dynamic behavior;functional testing;inheritance;object oriented programs;object state diagram;object state hierarchy;object state test strategy;object state testing;object-oriented programs;overloading;structure testing;test criteria;test generation;Automata;Automatic testing;Object oriented modeling;Runtime;Software design;Software testing;System testing}, 
	doi={10.1109/CMPSAC.1995.524785}, 
	ISSN={0730-3157}, 
	month={Aug},}

@INPROCEEDINGS{366932, 
	author={C. D. Turner and D. J. Robson}, 
	booktitle={1993 Conference on Software Maintenance}, 
	title={The state-based testing of object-oriented programs}, 
	year={1993}, 
	pages={302-310}, 
	keywords={object-oriented programming;program testing;program verification;software tools;functional approaches;object-oriented programs;state-based testing;structural approaches;validation;Computer languages;Computer science;Formal specifications;Life testing;Object oriented modeling;Object oriented programming;Performance evaluation;Prototypes;Software testing;System testing}, 
	doi={10.1109/ICSM.1993.366932}, 
	month={Sep},}

@INPROCEEDINGS{7962332, 
	author={F. Paulovsky and E. Pavese and D. Garbervetsky}, 
	booktitle={2017 IEEE/ACM 12th International Workshop on Automation of Software Testing (AST)}, 
	title={High-Coverage Testing of Navigation Models in Android Applications}, 
	year={2017}, 
	pages={52-58}, 
	keywords={Android (operating system);program testing;Android applications;high-coverage testing;navigation models;test coverage;user-observable states;Androids;Graphical user interfaces;Humanoid robots;Monitoring;Navigation;Testing;Tools;Android Testing;Automatic Testing;GUI-based Testing}, 
	doi={10.1109/AST.2017.6}, 
	month={May},}

@INPROCEEDINGS{7927971, 
	author={M. Fazzini and E. N. D. A. Freitas and S. R. Choudhary and A. Orso}, 
	booktitle={2017 IEEE International Conference on Software Testing, Verification and Validation (ICST)}, 
	title={Barista: A Technique for Recording, Encoding, and Running Platform Independent Android Tests}, 
	year={2017}, 
	pages={149-160}, 
	keywords={mobile computing;program testing;Android apps;Barista technique;mobile applications;platform independent Android tests;runtime system;test scripts;Androids;Companies;Encoding;Humanoid robots;Operating systems;Testing;Tools;Android testing;automated testing}, 
	doi={10.1109/ICST.2017.21}, 
	month={March},}

@inproceedings{Tang:2016:GTC:2970276.2970320,
	author = {Tang, Hongyin and Wu, Guoquan and Wei, Jun and Zhong, Hua},
	title = {Generating Test Cases to Expose Concurrency Bugs in Android Applications},
	booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
	series = {ASE 2016},
	year = {2016},
	isbn = {978-1-4503-3845-5},
	location = {Singapore, Singapore},
	pages = {648--653},
	numpages = {6},
	url = {http://doi.acm.org.libproxy.uccs.edu/10.1145/2970276.2970320},
	doi = {10.1145/2970276.2970320},
	acmid = {2970320},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {android, data race, mobile application, record/replay, testing},
} This paper is about asyncrounous programming bugs from racing conditions they made RacerDroid to prevent these

@Book{nolan2015agile,
	author = {Nolan, Godfrey},
	title = {Agile Android},
	publisher = {Apress Disctributed to the Book trade worldwide by Springer Science+Business Media},
	year = {2015},
	address = {Berkeley, CA New York},
	isbn = {978-1-4842-9701-8}
}This book has a big section on espresso

@inproceedings{MilaniFard:2014:LET:2642937.2642991,
	author = {Milani Fard, Amin and Mirzaaghaei, Mehdi and Mesbah, Ali},
	title = {Leveraging Existing Tests in Automated Test Generation for Web Applications},
	booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
	series = {ASE '14},
	year = {2014},
	isbn = {978-1-4503-3013-8},
	location = {Vasteras, Sweden},
	pages = {67--78},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2642937.2642991},
	doi = {10.1145/2642937.2642991},
	acmid = {2642991},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {automated test generation, test reuse, web applications},
} Tests web applications by using a state crawler to get the state of the app and then gets domain type info from the test suite to generate a new test suite


@ARTICLE{7911333, 
	author={G. Bai and Q. Ye and Y. Wu and H. Merwe and J. Sun and Y. Liu and J. S. Dong and W. Visser}, 
	journal={IEEE Transactions on Software Engineering}, 
	title={Towards Model Checking Android Applications}, 
	year={2017}, 
	volume={PP}, 
	number={99}, 
	pages={1-1}, 
	keywords={Androids;Humanoid robots;Java;Libraries;Model checking;Security;Software;Android application;security verification;software model checking}, 
	doi={10.1109/TSE.2017.2697848}, 
	ISSN={0098-5589}, 
	month={},} This article describes using software model checking in android  They develop a tool that runs model checking algorithms on apps that explores the states of the app and using model checking theory identifies security vulnerabilities

@ARTICLE{7903600, 
	author={K. Cui and K. Zhou and H. Song and M. Li}, 
	journal={IEEE Access}, 
	title={Automated Software Testing Based on Hierarchical State Transition Matrix for Smart TV}, 
	year={2017}, 
	volume={5}, 
	number={}, 
	pages={6492-6501}, 
	keywords={Android (operating system);digital television;matrix algebra;program testing;Android smart TV;ERE;HSTM;automatic software testing method;cyclomatic complexity;expanded regular expression;hierarchical state transition matrix;Androids;Complexity theory;Humanoid robots;Smart homes;Software;TV;Testing;Cyclomatic complexity;Hierarchical state transition matrix;expanded regular expressions;group state}, 
	doi={10.1109/ACCESS.2017.2694880}, 
	ISSN={}, 
	month={},} This article does state checking through model checking on a smart tv.  


@INPROCEEDINGS{7965246, 
	author={K. Moran and M. Linares-Vasquez and C. Bernal-Cardenas and C. Vendome and D. Poshyvanyk}, 
	booktitle={2017 IEEE/ACM 39th International Conference on Software Engineering Companion (ICSE-C)}, 
	title={CrashScope: A Practical Tool for Automated Testing of Android Applications}, 
	year={2017}, 
	volume={}, 
	number={}, 
	pages={15-18}, 
	keywords={mobile computing;program diagnostics;program testing;smart phones;software tools;Android app;CrashScope;automated Android application testing;captured exception stack trace;complex contextual features;detailed crash reproduction steps;dynamic analysis;event-driven nature;fully replay able script;mobile application testing;mobile testing tasks;screen shots;static analysis;systematic input generation;Androids;Computer crashes;Engines;Feature extraction;Humanoid robots;Testing;Tools;Android;automated testing;crash reports}, 
	doi={10.1109/ICSE-C.2017.16}, 
	ISSN={}, 
	month={May},}CRASHSCOPE - tries to find crashes and provides a debug log.  It injects inputs into an app after analyzing it using static and dynamic analysis to see if any crashes occur.



@article{Choi:2013:GGT:2544173.2509552,
	author = {Choi, Wontae and Necula, George and Sen, Koushik},
	title = {Guided GUI Testing of Android Apps with Minimal Restart and Approximate Learning},
	journal = {SIGPLAN Not.},
	issue_date = {October 2013},
	volume = {48},
	number = {10},
	month = oct,
	year = {2013},
	issn = {0362-1340},
	pages = {623--640},
	numpages = {18},
	url = {http://doi.acm.org.libproxy.uccs.edu/10.1145/2544173.2509552},
	doi = {10.1145/2544173.2509552},
	acmid = {2509552},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {android, automata, gui testing, learning},
} This article shows a tool that uses machine learning to find states of an application that are probably untested and make a model of those states to help guide testing. 

@misc{optimusinformationinc2016, title={Top 10 Mobile Testing Tools}, url={http://www.optimusinfo.com/top-10-mobile-testing-tools/}, year={2016}, month={Nov}}

@article{Luo:2017:TLT:3139486.3130945,
	author = {Luo, Chu and Kuutila, Miikka and Klakegg, Simon and Ferreira, Denzil and Flores, Huber and Goncalves, Jorge and M\"{a}ntyl\"{a}, Mika and Kostakos, Vassilis},
	title = {TestAWARE: A Laboratory-Oriented Testing Tool for Mobile Context-Aware Applications},
	journal = {Proc. ACM Interact. Mob. Wearable Ubiquitous Technol.},
	issue_date = {September 2017},
	volume = {1},
	number = {3},
	month = sep,
	year = {2017},
	issn = {2474-9567},
	pages = {80:1--80:29},
	articleno = {80},
	numpages = {29},
	url = {http://doi.acm.org.libproxy.uccs.edu/10.1145/3130945},
	doi = {10.1145/3130945},
	acmid = {3130945},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Sensors, context aware computing, machine learning, mobile interaction, mobile sensing},
} 

@ARTICLE{5676144, 
	author={M. Butler}, 
	journal={IEEE Pervasive Computing}, 
	title={Android: Changing the Mobile Landscape}, 
	year={2011}, 
	volume={10}, 
	number={1}, 
	pages={4-7}, 
	keywords={mobile computing;mobile radio;operating systems (computers);Android phones;Google;iPhone market;mobile landscape;smart phones;Androids;Driver circuits;Marketing and sales;Mobile communication;Smart phones;Android;App Inventor for Android;Apple App Store;BlackBerry;Technovation;iPhone}, 
	doi={10.1109/MPRV.2011.1}, 
	ISSN={1536-1268}, 
	month={Jan},}

@misc{chau_2017, title={IDC: Smartphone OS Market Share}, url={https://www.idc.com/promo/smartphone-market-share/os}, journal={www.idc.com}, author={Chau, Melissa}, year={2017}}

@misc{hoffman2017, title={How to Install and Use ADB, the Android Debug Bridge Utility}, url={https://www.howtogeek.com/125769/how-to-install-and-use-abd-the-android-debug-bridge-utility/}, journal={How-To Geek}, publisher={How-To Geek}, author={Hoffman, Chris}, year={2017}, month={Jun}}


@inproceedings{Klein:2014:BBM:2568225.2568227,
	author = {Klein, Cristian and Maggio, Martina and Arzen, Karl-Erik and Hernandez-Rodriguez, Francisco},
	title = {Brownout: Building More Robust Cloud Applications},
	booktitle = {Proceedings of the 36th International Conference on Software Engineering},
	series = {ICSE 2014},
	year = {2014},
	isbn = {978-1-4503-2756-5},
	location = {Hyderabad, India},
	pages = {700--711},
	numpages = {12},
	url = {http://doi.acm.org/10.1145/2568225.2568227},
	doi = {10.1145/2568225.2568227},
	acmid = {2568227},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {Adaptive Software, Brownout, Cloud, Control Theory},
} 

@article{boulos2014mobile,
	title={Mobile medical and health apps: state of the art, concerns, regulatory control and certification},
	author={Boulos, Maged N Kamel and Brewer, Ann C and Karimkhani, Chante and Buller, David B and Dellavalle, Robert P},
	journal={Online journal of public health informatics},
	volume={5},
	number={3},
	pages={229},
	year={2014},
	publisher={University of Illinois at Chicago Library}
}
